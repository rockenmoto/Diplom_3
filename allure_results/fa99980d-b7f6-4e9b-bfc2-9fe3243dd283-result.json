{"name": "Проверка ввод почты и клик по кнопке «Восстановить»", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=123.0.6312.123)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6697D7032+63090]\n\t(No symbol) [0x00007FF669742C82]\n\t(No symbol) [0x00007FF6695DEC65]\n\t(No symbol) [0x00007FF6695BCA7C]\n\t(No symbol) [0x00007FF66964D687]\n\t(No symbol) [0x00007FF669662AC1]\n\t(No symbol) [0x00007FF669646D83]\n\t(No symbol) [0x00007FF6696183A8]\n\t(No symbol) [0x00007FF669619441]\n\tGetHandleVerifier [0x00007FF669BD25AD+4238317]\n\tGetHandleVerifier [0x00007FF669C0F70D+4488525]\n\tGetHandleVerifier [0x00007FF669C079EF+4456495]\n\tGetHandleVerifier [0x00007FF6698B0576+953270]\n\t(No symbol) [0x00007FF66974E54F]\n\t(No symbol) [0x00007FF669749224]\n\t(No symbol) [0x00007FF66974935B]\n\t(No symbol) [0x00007FF669739B94]\n\tBaseThreadInitThunk [0x00007FFFD028257D+29]\n\tRtlUserThreadStart [0x00007FFFD108AA48+40]", "trace": "self = <tests.test_forgot_pass_page.TestForgotPassPage object at 0x000002842484AF00>, request = <FixtureRequest for <Function test_fill_email_and_click_to_restore_button_true[driver_chrome]>>\nselected_driver = 'driver_chrome'\n\n    @allure.title('Проверка ввод почты и клик по кнопке «Восстановить»')\n    @pytest.mark.parametrize(\"selected_driver\", ['driver_chrome', 'driver_firefox'])\n    def test_fill_email_and_click_to_restore_button_true(self, request, selected_driver):\n        driver = request.getfixturevalue(selected_driver)\n        header_page = HeaderPage(driver)\n        login_page = LoginPage(driver)\n        forgot_pass_page = ForgotPassPage(driver)\n        reset_pass_page = ResetPassPage(driver)\n    \n        header_page.click_to_personal_account()\n        login_page.click_to_restore_pass_button()\n        forgot_pass_page.fill_and_to_click_o_restore_button(self.user_data[0])\n>       assert reset_pass_page.wait_for_element(\n            ResetPassPageLocators.save_button_locator) and reset_pass_page.get_url() == Urls.reset_pass_url\n\ntests\\test_forgot_pass_page.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:21: in wait_for_element\n    WebDriverWait(self.driver, 200).until(ec.visibility_of_element_located(locator))\nC:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\nC:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\nC:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000028424848500>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF669739B94]\\\\n\\\\tBaseThreadInitThunk [0x00007FFFD028257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFFD108AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=123.0.6312.123)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6697D7032+63090]\nE       \t(No symbol) [0x00007FF669742C82]\nE       \t(No symbol) [0x00007FF6695DEC65]\nE       \t(No symbol) [0x00007FF6695BCA7C]\nE       \t(No symbol) [0x00007FF66964D687]\nE       \t(No symbol) [0x00007FF669662AC1]\nE       \t(No symbol) [0x00007FF669646D83]\nE       \t(No symbol) [0x00007FF6696183A8]\nE       \t(No symbol) [0x00007FF669619441]\nE       \tGetHandleVerifier [0x00007FF669BD25AD+4238317]\nE       \tGetHandleVerifier [0x00007FF669C0F70D+4488525]\nE       \tGetHandleVerifier [0x00007FF669C079EF+4456495]\nE       \tGetHandleVerifier [0x00007FF6698B0576+953270]\nE       \t(No symbol) [0x00007FF66974E54F]\nE       \t(No symbol) [0x00007FF669749224]\nE       \t(No symbol) [0x00007FF66974935B]\nE       \t(No symbol) [0x00007FF669739B94]\nE       \tBaseThreadInitThunk [0x00007FFFD028257D+29]\nE       \tRtlUserThreadStart [0x00007FFFD108AA48+40]\n\nC:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "steps": [{"name": "Клик на \"Личный кабинет\"", "status": "passed", "steps": [{"name": "Клик по элементу", "status": "passed", "steps": [{"name": "Ожидаем элемент", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \".//p[text()='Личный Кабинет']\"]"}], "start": 1713330680662, "stop": 1713330680730}], "parameters": [{"name": "locator", "value": "['xpath', \".//p[text()='Личный Кабинет']\"]"}], "start": 1713330680662, "stop": 1713330680788}], "start": 1713330680662, "stop": 1713330680788}, {"name": "Клик по кнопке \"Восстановить\"", "status": "passed", "steps": [{"name": "Клик по элементу", "status": "passed", "steps": [{"name": "Ожидаем элемент", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', './/a[text()=\"Восстановить пароль\"]']"}], "start": 1713330680788, "stop": 1713330680823}], "parameters": [{"name": "locator", "value": "['xpath', './/a[text()=\"Восстановить пароль\"]']"}], "start": 1713330680788, "stop": 1713330680874}], "start": 1713330680788, "stop": 1713330680874}, {"name": "Заполняем емайл и кликаем по кнопку \"Восстановить\"", "status": "passed", "steps": [{"name": "Заполняем поле текстом", "status": "passed", "steps": [{"name": "Ожидаем элемент", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \".//label[text() = 'Email']/following-sibling::input\"]"}], "start": 1713330680874, "stop": 1713330680902}], "parameters": [{"name": "locator", "value": "['xpath', \".//label[text() = 'Email']/following-sibling::input\"]"}, {"name": "text", "value": "'ybrfo@yandex.ru'"}], "start": 1713330680874, "stop": 1713330680977}, {"name": "Клик по элементу", "status": "passed", "steps": [{"name": "Ожидаем элемент", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', './/button[text()=\"Восстановить\"]']"}], "start": 1713330680977, "stop": 1713330681008}], "parameters": [{"name": "locator", "value": "['xpath', './/button[text()=\"Восстановить\"]']"}], "start": 1713330680977, "stop": 1713330681039}], "parameters": [{"name": "email", "value": "'ybrfo@yandex.ru'"}], "start": 1713330680874, "stop": 1713330681039}, {"name": "Ожидаем элемент", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=123.0.6312.123)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6697D7032+63090]\n\t(No symbol) [0x00007FF669742C82]\n\t(No symbol) [0x00007FF6695DEC65]\n\t(No symbol) [0x00007FF6695BCA7C]\n\t(No symbol) [0x00007FF66964D687]\n\t(No symbol) [0x00007FF669662AC1]\n\t(No symbol) [0x00007FF669646D83]\n\t(No symbol) [0x00007FF6696183A8]\n\t(No symbol) [0x00007FF669619441]\n\tGetHandleVerifier [0x00007FF669BD25AD+4238317]\n\tGetHandleVerifier [0x00007FF669C0F70D+4488525]\n\tGetHandleVerifier [0x00007FF669C079EF+4456495]\n\tGetHandleVerifier [0x00007FF6698B0576+953270]\n\t(No symbol) [0x00007FF66974E54F]\n\t(No symbol) [0x00007FF669749224]\n\t(No symbol) [0x00007FF66974935B]\n\t(No symbol) [0x00007FF669739B94]\n\tBaseThreadInitThunk [0x00007FFFD028257D+29]\n\tRtlUserThreadStart [0x00007FFFD108AA48+40]\n\n", "trace": "  File \"C:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\UPGRADE Skills\\Практикум\\Автоматизатор.Python\\Diplom\\Diplom_3\\pages\\base_page.py\", line 21, in wait_for_element\n    WebDriverWait(self.driver, 200).until(ec.visibility_of_element_located(locator))\n  File \"C:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\rocke\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "['xpath', './/button[text()=\"Сохранить\"]']"}], "start": 1713330681039, "stop": 1713330758728}], "parameters": [{"name": "selected_driver", "value": "'driver_chrome'"}], "start": 1713330675044, "stop": 1713330758772, "uuid": "f89a6244-ec42-4686-9b71-97682787a197", "historyId": "d280ce844af67a3f7741a769ab728932", "testCaseId": "9ecf23c3cbf4e3bc8ac426d004cac65d", "fullName": "tests.test_forgot_pass_page.TestForgotPassPage#test_fill_email_and_click_to_restore_button_true", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_forgot_pass_page"}, {"name": "subSuite", "value": "TestForgotPassPage"}, {"name": "host", "value": "Rockenmoto"}, {"name": "thread", "value": "1804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_forgot_pass_page"}]}